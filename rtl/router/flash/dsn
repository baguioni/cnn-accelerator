#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-498-g52d049b51)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x58bdecc17ae0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x58bdecc17c70 .scope module, "sram_rw_tb" "sram_rw_tb" 3 1;
 .timescale 0 0;
P_0x58bdecbd8a90 .param/l "ADDR_WIDTH" 0 3 8, +C4<00000000000000000000000000001000>;
P_0x58bdecbd8ad0 .param/l "DATA_WIDTH" 0 3 5, +C4<00000000000000000000000000001000>;
P_0x58bdecbd8b10 .param/l "DEPTH" 0 3 4, +C4<00000000000000000000000001000000>;
P_0x58bdecbd8b50 .param/l "INPUT_WIDTH" 0 3 9, +C4<00000000000000000000000000100000>;
P_0x58bdecbd8b90 .param/l "OUTPUT_WIDTH" 0 3 10, +C4<00000000000000000000000000010000>;
P_0x58bdecbd8bd0 .param/l "READ_WIDTH" 0 3 7, +C4<00000000000000000000000000000010>;
P_0x58bdecbd8c10 .param/l "WRITE_WIDTH" 0 3 6, +C4<00000000000000000000000000000100>;
v0x58bdecc36410_0 .var "i_clk", 0 0;
v0x58bdecc36500_0 .var "i_data_in", 31 0;
v0x58bdecc36600_0 .var "i_nrst", 0 0;
v0x58bdecc36700_0 .var "i_read_addr", 15 0;
v0x58bdecc36800_0 .var "i_read_en", 0 0;
v0x58bdecc368a0_0 .var "i_write_addr", 7 0;
v0x58bdecc36970_0 .var "i_write_en", 0 0;
v0x58bdecc36a40_0 .net "o_data_out", 15 0, v0x58bdecc36190_0;  1 drivers
S_0x58bdecc05a30 .scope module, "dut" "sram" 3 27, 4 1 0, S_0x58bdecc17c70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_nrst";
    .port_info 2 /INPUT 1 "i_write_en";
    .port_info 3 /INPUT 1 "i_read_en";
    .port_info 4 /INPUT 32 "i_data_in";
    .port_info 5 /INPUT 8 "i_write_addr";
    .port_info 6 /INPUT 16 "i_read_addr";
    .port_info 7 /OUTPUT 16 "o_data_out";
P_0x58bdecc05bc0 .param/l "ADDR_WIDTH" 0 4 6, +C4<00000000000000000000000000001000>;
P_0x58bdecc05c00 .param/l "DATA_WIDTH" 0 4 3, +C4<00000000000000000000000000001000>;
P_0x58bdecc05c40 .param/l "DEPTH" 0 4 2, +C4<00000000000000000000000001000000>;
P_0x58bdecc05c80 .param/l "READ_WIDTH" 0 4 5, +C4<00000000000000000000000000000010>;
P_0x58bdecc05cc0 .param/l "WRITE_WIDTH" 0 4 4, +C4<00000000000000000000000000000100>;
v0x58bdecc35b50_0 .net "i_clk", 0 0, v0x58bdecc36410_0;  1 drivers
v0x58bdecc35c30_0 .net "i_data_in", 31 0, v0x58bdecc36500_0;  1 drivers
v0x58bdecc35d20_0 .net "i_nrst", 0 0, v0x58bdecc36600_0;  1 drivers
v0x58bdecc35df0_0 .net "i_read_addr", 15 0, v0x58bdecc36700_0;  1 drivers
v0x58bdecc35ee0_0 .net "i_read_en", 0 0, v0x58bdecc36800_0;  1 drivers
v0x58bdecc35ff0_0 .net "i_write_addr", 7 0, v0x58bdecc368a0_0;  1 drivers
v0x58bdecc360d0_0 .net "i_write_en", 0 0, v0x58bdecc36970_0;  1 drivers
v0x58bdecc36190_0 .var "o_data_out", 15 0;
v0x58bdecc36250 .array "sram", 255 0, 7 0;
E_0x58bdecc11b00/0 .event negedge, v0x58bdecc35d20_0;
E_0x58bdecc11b00/1 .event posedge, v0x58bdecc35b50_0;
E_0x58bdecc11b00 .event/or E_0x58bdecc11b00/0, E_0x58bdecc11b00/1;
S_0x58bdecc05fe0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 21, 4 21 0, S_0x58bdecc05a30;
 .timescale 0 0;
v0x58bdecc061c0_0 .var/2s "i", 31 0;
S_0x58bdecc35580 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 4 27, 4 27 0, S_0x58bdecc05a30;
 .timescale 0 0;
v0x58bdecc35780_0 .var/2s "i", 31 0;
S_0x58bdecc35860 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 4 32, 4 32 0, S_0x58bdecc05a30;
 .timescale 0 0;
v0x58bdecc35a70_0 .var/2s "i", 31 0;
    .scope S_0x58bdecc05a30;
T_0 ;
    %wait E_0x58bdecc11b00;
    %load/vec4 v0x58bdecc35d20_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %fork t_1, S_0x58bdecc05fe0;
    %jmp t_0;
    .scope S_0x58bdecc05fe0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58bdecc061c0_0, 0, 32;
T_0.2 ; Top of for-loop
    %load/vec4 v0x58bdecc061c0_0;
    %cmpi/s 256, 0, 32;
    %jmp/0xz T_0.3, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 3, v0x58bdecc061c0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x58bdecc36250, 0, 4;
T_0.4 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x58bdecc061c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x58bdecc061c0_0, 0, 32;
    %jmp T_0.2;
T_0.3 ; for-loop exit label
    %end;
    .scope S_0x58bdecc05a30;
t_0 %join;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0x58bdecc360d0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.5, 8;
    %fork t_3, S_0x58bdecc35580;
    %jmp t_2;
    .scope S_0x58bdecc35580;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58bdecc35780_0, 0, 32;
T_0.7 ; Top of for-loop
    %load/vec4 v0x58bdecc35780_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_0.8, 5;
    %load/vec4 v0x58bdecc35c30_0;
    %pushi/vec4 24, 0, 36;
    %load/vec4 v0x58bdecc35780_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %load/vec4 v0x58bdecc35ff0_0;
    %pad/u 32;
    %load/vec4 v0x58bdecc35780_0;
    %add;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x58bdecc36250, 0, 4;
T_0.9 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x58bdecc35780_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x58bdecc35780_0, 0, 32;
    %jmp T_0.7;
T_0.8 ; for-loop exit label
    %end;
    .scope S_0x58bdecc05a30;
t_2 %join;
    %jmp T_0.6;
T_0.5 ;
    %load/vec4 v0x58bdecc35ee0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.10, 8;
    %fork t_5, S_0x58bdecc35860;
    %jmp t_4;
    .scope S_0x58bdecc35860;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58bdecc35a70_0, 0, 32;
T_0.12 ; Top of for-loop
    %load/vec4 v0x58bdecc35a70_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_0.13, 5;
    %load/vec4 v0x58bdecc35df0_0;
    %pushi/vec4 8, 0, 36;
    %load/vec4 v0x58bdecc35a70_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %pad/u 10;
    %ix/vec4 4;
    %load/vec4a v0x58bdecc36250, 4;
    %ix/load 5, 0, 0;
    %pushi/vec4 8, 0, 36;
    %load/vec4 v0x58bdecc35a70_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %assign/vec4/off/d v0x58bdecc36190_0, 4, 5;
T_0.14 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x58bdecc35a70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x58bdecc35a70_0, 0, 32;
    %jmp T_0.12;
T_0.13 ; for-loop exit label
    %end;
    .scope S_0x58bdecc05a30;
t_4 %join;
T_0.10 ;
T_0.6 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x58bdecc17c70;
T_1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58bdecc36410_0, 0, 1;
T_1.0 ;
    %delay 5, 0;
    %load/vec4 v0x58bdecc36410_0;
    %inv;
    %store/vec4 v0x58bdecc36410_0, 0, 1;
    %jmp T_1.0;
T_1.1 ;
    %end;
    .thread T_1;
    .scope S_0x58bdecc17c70;
T_2 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58bdecc36600_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58bdecc36970_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58bdecc36800_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58bdecc36500_0, 0, 32;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x58bdecc368a0_0, 0, 8;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x58bdecc36700_0, 0, 16;
    %delay 10, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x58bdecc36600_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x58bdecc36970_0, 0, 1;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x58bdecc368a0_0, 0, 8;
    %pushi/vec4 2712847316, 0, 32;
    %store/vec4 v0x58bdecc36500_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58bdecc36970_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x58bdecc36800_0, 0, 1;
    %pushi/vec4 256, 0, 16;
    %store/vec4 v0x58bdecc36700_0, 0, 16;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58bdecc36800_0, 0, 1;
    %delay 50, 0;
    %vpi_call/w 3 69 "$finish" {0 0 0};
    %end;
    .thread T_2;
    .scope S_0x58bdecc17c70;
T_3 ;
    %vpi_call/w 3 74 "$dumpfile", "tb.vcd" {0 0 0};
    %vpi_call/w 3 75 "$dumpvars" {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "tb_sram.sv";
    "sram.sv";
