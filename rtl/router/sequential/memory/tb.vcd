$date
	Mon Feb 10 21:53:19 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module miso_fifo_tb $end
$var wire 1 ! o_pop_valid $end
$var wire 1 " o_full $end
$var wire 1 # o_empty $end
$var wire 8 $ o_data [7:0] $end
$var parameter 32 % DATA_LENGTH $end
$var parameter 32 & DATA_WIDTH $end
$var parameter 32 ' DEPTH $end
$var reg 1 ( i_clear $end
$var reg 1 ) i_clk $end
$var reg 64 * i_data [63:0] $end
$var reg 1 + i_nrst $end
$var reg 2 , i_p_mode [1:0] $end
$var reg 1 - i_pop_en $end
$var reg 1 . i_r_pointer_reset $end
$var reg 8 / i_valid [7:0] $end
$var reg 1 0 i_write_en $end
$scope module dut $end
$var wire 1 ( i_clear $end
$var wire 1 ) i_clk $end
$var wire 64 1 i_data [63:0] $end
$var wire 1 + i_nrst $end
$var wire 2 2 i_p_mode [1:0] $end
$var wire 1 - i_pop_en $end
$var wire 1 . i_r_pointer_reset $end
$var wire 8 3 i_valid [7:0] $end
$var wire 1 0 i_write_en $end
$var wire 1 4 write_en $end
$var wire 1 5 lllast_data_2b $end
$var wire 1 6 llast_data_2b $end
$var wire 1 7 last_data_4b $end
$var wire 1 8 last_data_2b $end
$var parameter 32 9 ADDR_WIDTH $end
$var parameter 32 : DATA_LENGTH $end
$var parameter 32 ; DATA_WIDTH $end
$var parameter 32 < DEPTH $end
$var parameter 32 = INDEX $end
$var parameter 2 > _2x2 $end
$var parameter 2 ? _4x4 $end
$var parameter 2 @ _8x8 $end
$var reg 8 A fb_data [7:0] $end
$var reg 8 B o_data [7:0] $end
$var reg 1 # o_empty $end
$var reg 1 " o_full $end
$var reg 1 ! o_pop_valid $end
$var reg 5 C r_pointer [4:0] $end
$var reg 8 D tb_data [7:0] $end
$var reg 5 E w_pointer [4:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 F i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b0 @
b1 ?
b10 >
b0 =
b100000 <
b1000 ;
b1000 :
b101 9
b100000 '
b1000 &
b1000 %
$end
#0
$dumpvars
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
08
07
06
05
04
b0 3
b0 2
b0 1
00
b0 /
0.
0-
b0 ,
0+
b0 *
0)
0(
b0 $
1#
0"
0!
$end
#5000
1)
#10000
0)
1+
#15000
1)
#20000
0)
#25000
1)
#30000
14
0)
b11 /
b11 3
b10001000010001 *
b10001000010001 1
10
#35000
b100001 A
b1001 D
0#
16
b10 E
b1000 F
1)
#40000
04
0)
1-
00
#45000
b100010 D
b100010 A
17
18
06
1!
b1 C
b10001 $
b10001 B
1)
#50000
0)
#55000
1#
b0 D
b0 A
07
08
b10 C
b100010 $
b100010 B
1)
#60000
0)
1(
0-
#65000
0!
b0 $
b0 B
b0 C
b0 E
1)
#70000
0)
b1 ,
b1 2
0(
#75000
1)
#80000
14
0)
b11111 /
b11111 3
b10100000100000000110000001000000001 *
b10100000100000000110000001000000001 1
10
#85000
b111001 D
b100001 A
0#
b101 E
b1000 F
1)
#90000
04
0)
1-
00
#95000
b10011 D
b1000011 A
15
1!
b10 C
b100001 $
b100001 B
1)
#100000
0)
#105000
b101 D
b101 A
17
18
05
b100 C
b1000011 $
b1000011 B
1)
#110000
0)
#115000
1#
b0 D
b0 A
07
08
b101 C
b101 $
b101 B
1)
#120000
0)
1(
0-
#125000
b0 E
0!
b0 $
b0 B
b0 C
1)
#130000
0)
b10 ,
b10 2
0(
#135000
1)
#140000
14
0)
b1111111 /
b1111111 3
b1000000010000000100000001000000010000000100000001 *
b1000000010000000100000001000000010000000100000001 1
10
#145000
b1010101 D
b10001 A
0#
b111 E
b1000 F
1)
#150000
04
0)
1-
00
#155000
b10101 D
15
1!
b100 C
b1010101 $
b1010101 B
1)
#160000
0)
#165000
1#
b0 D
b0 A
05
b111 C
b10101 $
b10101 B
1)
#170000
0)
#175000
0!
b0 $
b0 B
1)
#180000
0)
0-
#185000
1)
#190000
0)
#195000
1)
#200000
0)
#205000
1)
#210000
0)
#215000
1)
#220000
0)
#225000
1)
#230000
0)
#235000
1)
#240000
0)
#245000
1)
#250000
0)
#255000
1)
#260000
0)
#265000
1)
#270000
0)
#275000
1)
#280000
0)
